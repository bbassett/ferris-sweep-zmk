/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        layer5 {
            bindings = <&lt 5 ESCAPE>;
            key-positions = <32 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W        &kp E       &kp R       &kp T               &kp Y            &kp U        &kp I       &kp O        &kp P
&hm LSHFT A  &hm LCTRL S  &hm LALT D  &hm LCMD F  &lt 3 G             &kp H            &hm LCMD J   &hm RALT K  &hm RCTRL L  &hm RSHFT ENTER
&kp Z        &kp X        &kp C       &kp V       &kp B               &kp N            &kp M        &kp COMMA   &kp DOT      &kp FSLH
                                      &lt 2 ESC   &mt CAPSLOCK TAB    &lt 4 BACKSPACE  &lt 1 SPACE
            >;
        };

        symbols {
            bindings = <
&kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)
&kp LBKT      &kp RBKT       &kp LS(LBRC)   &kp LS(RBRC)  &kp BSLH         &kp LS(PIPE)   &kp SQT       &kp LS(DQT)   &kp GRAVE     &kp LS(TILDE)
&kp MINUS     &kp LS(UNDER)  &kp EQUAL      &kp LS(PLUS)  &trans           &trans         &kp SQT       &kp LS(DQT)   &kp SEMI      &kp LS(COLON)
                                            &trans        &trans           &trans         &trans
            >;
        };

        num_arrows {
            bindings = <
&kp N1          &kp N2            &kp N3        &kp N4            &kp N5                      &kp N6                     &kp N7     &kp N8        &kp N9     &kp N0
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &trans                      &kp LEFT                   &kp DOWN   &kp UP_ARROW  &kp RIGHT  &trans
&trans          &trans            &trans        &trans            &kp LS(LG(LEFT_BRACKET))    &kp LS(LG(RIGHT_BRACKET))  &trans     &trans        &trans     &trans
                                                &trans            &trans                      &kp DELETE                 &kp ENTER
            >;
        };

        mouse {
            bindings = <
&trans  &trans     &trans  &trans     &trans       &trans     &trans     &trans     &trans     &trans
&trans  &kp RG(S)  &trans  &trans     &trans       &kp RG(H)  &kp RG(J)  &kp RG(K)  &kp RG(L)  &trans
&trans  &trans     &trans  &trans     &trans       &trans     &kp RG(V)  &kp RG(R)  &trans     &trans
                           &kp RG(F)  &kp RG(D)    &trans     &trans
            >;
        };

        window_media {
            bindings = <
&kp LA(LG(N1))  &kp LA(LG(N2))  &kp LA(LG(N3))  &kp LA(LG(N4))  &kp LA(LG(N5))    &trans  &kp TAB     &kp LS(TAB)       &kp GRAVE        &trans
&kp LS(LA(A))   &kp LS(LA(X))   &kp LS(LA(D))   &kp LS(LA(F))   &trans            &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT       &trans
&kp LG(LS(N1))  &kp LG(LS(N2))  &kp LG(LS(N3))  &kp LG(LS(N4))  &trans            &trans  &kp K_MUTE  &kp C_VOL_DN      &kp C_VOLUME_UP  &trans
                                                &kp LCMD        &trans            &trans  &trans
            >;
        };

        bootloader {
            bindings = <
&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&bootloader  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                             &trans  &trans    &trans  &trans
            >;
        };
    };
};
