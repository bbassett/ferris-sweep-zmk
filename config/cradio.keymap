/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        layer5 {
            bindings = <&lt 4 ESCAPE>;
            key-positions = <31 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W        &kp E       &kp R       &kp T               &kp Y            &kp U        &kp I       &kp O        &kp P
&hm LSHFT A  &hm LCTRL S  &hm LALT D  &hm RCMD F  &kp G               &kp H            &hm LCMD J   &hm RALT K  &hm RCTRL L  &hm RSHFT ENTER
&kp Z        &kp X        &kp C       &kp V       &kp B               &kp N            &kp M        &kp COMMA   &kp DOT      &kp FSLH
                                      &lt 2 ESC   &mt CAPSLOCK TAB    &lt 3 BACKSPACE  &lt 1 SPACE
            >;
        };

        layer1 {
            bindings = <
&kp N1      &kp N2            &kp N3        &kp N4        &kp N5        &kp N6        &kp N7      &kp N8       &kp N9      &kp N0
&kp LS(N1)  &kp LS(NUMBER_2)  &kp LS(N3)    &kp LS(N4)    &kp LS(N5)    &kp LS(N6)    &kp LS(N7)  &kp LS(N8)   &kp LS(N9)  &hm RIGHT_SHIFT N0
&kp LBKT    &kp RBKT          &kp LS(LBRC)  &kp LS(RBRC)  &kp BSLH      &kp LS(PIPE)  &kp SQT     &kp LS(DQT)  &kp GRAVE   &kp LS(TILDE)
                                            &trans        &trans        &trans        &trans
            >;
        };

        layer2 {
            bindings = <
&trans          &trans            &trans        &trans            &trans    &trans      &trans         &trans        &trans       &trans
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &trans    &kp LEFT    &kp DOWN       &kp UP_ARROW  &kp RIGHT    &trans
&kp MINUS       &kp LS(UNDER)     &kp EQUAL     &kp LS(PLUS)      &trans    &kp SEMI    &kp LS(COLON)  &kp SQT       &kp LS(DQT)  &trans
                                                &trans            &trans    &kp DELETE  &kp ENTER
            >;
        };

        layer3 {
            bindings = <
&kp LBRC   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp RBRC        &trans  &trans      &trans             &trans           &trans
&kp COLON  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp PLUS        &trans  &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &trans
&kp TILDE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(BSLH)    &trans  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
                                   &kp LS(N0)  &kp UNDER       &trans  &trans
            >;
        };

        bootloader {
            bindings = <
&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&bootloader  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                             &trans  &trans    &trans  &trans
            >;
        };
    };
};
