/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        layer5 {
            bindings = <&lt 5 ESCAPE>;
            key-positions = <30 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W        &kp E       &kp R          &kp T        &kp Y                &kp U            &kp I       &kp O        &kp P
&hm LSHFT A  &hm LCTRL S  &hm LALT D  &hm RCMD F     &kp G        &kp H                &hm LCMD J       &hm RALT K  &hm RCTRL L  &hm RSHFT SEMICOLON
&kp Z        &kp Z        &kp C       &kp V          &kp B        &kp N                &kp M            &kp COMMA   &kp DOT      &kp FSLH
                                      &lt NAV_L ESC  &lt 2 TAB    &lt NUM_L BACKSPACE  &lt SYM_L SPACE
            >;
        };

        layer1 {
            bindings = <
&trans          &trans            &trans        &trans            &trans    &trans      &trans         &trans        &trans     &trans
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &trans    &kp LEFT    &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp ENTER
&trans          &trans            &trans        &trans            &trans    &kp HOME    &kp PAGE_DOWN  &kp PG_UP     &kp END    &trans
                                                &trans            &trans    &kp DELETE  &kp ENTER
            >;
        };

        layer2 {
            bindings = <
&trans              &trans  &trans  &trans     &trans    &trans  &trans    &trans  &kp LBKT  &kp RBKT
&hm LSHFT NUMBER_1  &kp N2  &kp N3  &kp N4     &kp N5    &kp N6  &kp N7    &kp N8  &kp N9    &hm RIGHT_SHIFT N0
&trans              &trans  &trans  &kp GRAVE  &trans    &trans  &kp BSLH  &trans  &trans    &trans
                                    &trans     &trans    &trans  &trans
            >;
        };

        layer3 {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT     &trans  &trans  &trans  &trans  &trans
&kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL    &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH     &trans  &trans  &trans  &trans  &trans
                           &kp N0  &kp MINUS    &trans  &trans
            >;
        };

        layer4 {
            bindings = <
&kp LBRC   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp RBRC        &trans  &trans  &trans  &trans  &trans
&kp COLON  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp PLUS        &trans  &trans  &trans  &trans  &trans
&kp TILDE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(BSLH)    &trans  &trans  &trans  &trans  &trans
                                   &kp LS(N0)  &kp UNDER       &trans  &trans
            >;
        };

        layer5 {
            bindings = <
&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&bootloader  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                             &trans  &trans    &trans  &trans
            >;
        };
    };
};
